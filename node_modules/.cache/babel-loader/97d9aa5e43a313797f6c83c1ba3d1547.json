{"ast":null,"code":"import * as React from 'react';\n/**\n * Hook which lets child navigators add getters to be called for obtaining rehydrated state.\n */\n\nexport default function useKeyedChildListeners() {\n  const {\n    current: keyedListeners\n  } = React.useRef({\n    getState: {},\n    beforeRemove: {}\n  });\n  const addKeyedListener = React.useCallback((type, key, listener) => {\n    keyedListeners[type][key] = listener;\n    return () => {\n      keyedListeners[type][key] = undefined;\n    };\n  }, [keyedListeners]);\n  return {\n    keyedListeners,\n    addKeyedListener\n  };\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAIA;AACA;AACA;;AACA,eAAe,SAASC,sBAAT,GAAkC;EAC/C,MAAM;IAAEC,OAAO,EAAEC;EAAX,IAA8BH,KAAK,CAACI,MAANJ,CAOlC;IACAK,QAAQ,EAAE,EADV;IAEAC,YAAY,EAAE;EAFd,CAPkCN,CAApC;EAYA,MAAMO,gBAAgB,GAAGP,KAAK,CAACQ,WAANR,CACvB,CACES,IADF,EAEEC,GAFF,EAGEC,QAHF,KAIK;IACHR,cAAc,CAACM,IAAD,CAAdN,CAAqBO,GAArBP,IAA4BQ,QAA5BR;IAEA,OAAO,MAAM;MACXA,cAAc,CAACM,IAAD,CAAdN,CAAqBO,GAArBP,IAA4BS,SAA5BT;IADF;EARqB,GAYvB,CAACA,cAAD,CAZuBH,CAAzB;EAeA,OAAO;IACLG,cADK;IAELI;EAFK,CAAP;AAID","names":["React","useKeyedChildListeners","current","keyedListeners","useRef","getState","beforeRemove","addKeyedListener","useCallback","type","key","listener","undefined"],"sources":["/Users/harsh_ju/node_modules/@react-navigation/core/lib/module/useKeyedChildListeners.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport type { KeyedListenerMap } from './NavigationBuilderContext';\n\n/**\n * Hook which lets child navigators add getters to be called for obtaining rehydrated state.\n */\nexport default function useKeyedChildListeners() {\n  const { current: keyedListeners } = React.useRef<\n    {\n      [K in keyof KeyedListenerMap]: Record<\n        string,\n        KeyedListenerMap[K] | undefined\n      >;\n    }\n  >({\n    getState: {},\n    beforeRemove: {},\n  });\n\n  const addKeyedListener = React.useCallback(\n    <T extends keyof KeyedListenerMap>(\n      type: T,\n      key: string,\n      listener: KeyedListenerMap[T]\n    ) => {\n      keyedListeners[type][key] = listener;\n\n      return () => {\n        keyedListeners[type][key] = undefined;\n      };\n    },\n    [keyedListeners]\n  );\n\n  return {\n    keyedListeners,\n    addKeyedListener,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}
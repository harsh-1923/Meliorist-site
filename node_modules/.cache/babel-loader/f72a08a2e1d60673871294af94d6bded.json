{"ast":null,"code":"import { CommonActions } from '@react-navigation/routers';\nexport const NOT_INITIALIZED_ERROR = \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\nexport default function createNavigationContainerRef() {\n  const methods = [...Object.keys(CommonActions), 'addListener', 'removeListener', 'resetRoot', 'dispatch', 'isFocused', 'canGoBack', 'getRootState', 'getState', 'getParent', 'getCurrentRoute', 'getCurrentOptions'];\n  const listeners = {};\n\n  const removeListener = (event, callback) => {\n    var _listeners$event;\n\n    listeners[event] = (_listeners$event = listeners[event]) === null || _listeners$event === void 0 ? void 0 : _listeners$event.filter(cb => cb !== callback);\n  };\n\n  let current = null;\n  const ref = {\n    get current() {\n      return current;\n    },\n\n    set current(value) {\n      current = value;\n\n      if (value != null) {\n        Object.entries(listeners).forEach(_ref => {\n          let [event, callbacks] = _ref;\n          callbacks.forEach(callback => {\n            value.addListener(event, callback);\n          });\n        });\n      }\n    },\n\n    isReady: () => {\n      if (current == null) {\n        return false;\n      }\n\n      return current.isReady();\n    },\n    ...methods.reduce((acc, name) => {\n      acc[name] = function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        if (current == null) {\n          switch (name) {\n            case 'addListener':\n              {\n                const [event, callback] = args;\n                listeners[event] = listeners[event] || [];\n                listeners[event].push(callback);\n                return () => removeListener(event, callback);\n              }\n\n            case 'removeListener':\n              {\n                const [event, callback] = args;\n                removeListener(event, callback);\n                break;\n              }\n\n            default:\n              console.error(NOT_INITIALIZED_ERROR);\n          }\n        } else {\n          // @ts-expect-error: this is ok\n          return current[name](...args);\n        }\n      };\n\n      return acc;\n    }, {})\n  };\n  return ref;\n}","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,QAA8B,2BAA9B;AAQA,OAAO,MAAMC,qBAAqB,GAChC,+QADK;AAGP,eAAe,SAASC,4BAAT,GAEmC;EAChD,MAAMC,OAAO,GAAG,CACd,GAAGC,MAAM,CAACC,IAAPD,CAAYJ,aAAZI,CADW,EAEd,aAFc,EAGd,gBAHc,EAId,WAJc,EAKd,UALc,EAMd,WANc,EAOd,WAPc,EAQd,cARc,EASd,UATc,EAUd,WAVc,EAWd,iBAXc,EAYd,mBAZc,CAAhB;EAeA,MAAME,SAAuD,GAAG,EAAhE;;EAEA,MAAMC,cAAc,GAAG,CACrBC,KADqB,EAErBC,QAFqB,KAGlB;IAAA;;IACHH,SAAS,CAACE,KAAD,CAATF,uBAAmBA,SAAS,CAACE,KAAD,CAA5B,qDAAmBE,iBAAkBC,MAAlB,CAA0BC,EAAD,IAAQA,EAAE,KAAKH,QAAxC,CAAnBH;EAJF;;EAOA,IAAIO,OAAiD,GAAG,IAAxD;EAEA,MAAMC,GAAiD,GAAG;IACxD,IAAID,OAAJ,GAAc;MACZ,OAAOA,OAAP;IAFsD;;IAIxD,IAAIA,OAAJ,CAAYE,KAAZ,EAA6D;MAC3DF,OAAO,GAAGE,KAAVF;;MAEA,IAAIE,KAAK,IAAI,IAAb,EAAmB;QACjBX,MAAM,CAACY,OAAPZ,CAAeE,SAAfF,EAA0Ba,OAA1Bb,CAAkC,QAAwB;UAAA,IAAvB,CAACI,KAAD,EAAQU,SAAR,CAAuB;UACxDA,SAAS,CAACD,OAAVC,CAAmBT,QAAD,IAAc;YAC9BM,KAAK,CAACI,WAANJ,CACEP,KADFO,EAEEN,QAFFM;UADF;QADF;MAQD;IAhBqD;;IAkBxDK,OAAO,EAAE,MAAM;MACb,IAAIP,OAAO,IAAI,IAAf,EAAqB;QACnB,OAAO,KAAP;MACD;;MAED,OAAOA,OAAO,CAACO,OAARP,EAAP;IAvBsD;IAyBxD,GAAGV,OAAO,CAACkB,MAARlB,CAAoB,CAACmB,GAAD,EAAMC,IAAN,KAAe;MACpCD,GAAG,CAACC,IAAD,CAAHD,GAAY,YAAoB;QAAA,kCAAhBE,IAAgB;UAAhBA,IAAgB;QAAA;;QAC9B,IAAIX,OAAO,IAAI,IAAf,EAAqB;UACnB,QAAQU,IAAR;YACE,KAAK,aAAL;cAAoB;gBAClB,MAAM,CAACf,KAAD,EAAQC,QAAR,IAAoBe,IAA1B;gBAEAlB,SAAS,CAACE,KAAD,CAATF,GAAmBA,SAAS,CAACE,KAAD,CAATF,IAAoB,EAAvCA;gBACAA,SAAS,CAACE,KAAD,CAATF,CAAiBmB,IAAjBnB,CAAsBG,QAAtBH;gBAEA,OAAO,MAAMC,cAAc,CAACC,KAAD,EAAQC,QAAR,CAA3B;cACD;;YACD,KAAK,gBAAL;cAAuB;gBACrB,MAAM,CAACD,KAAD,EAAQC,QAAR,IAAoBe,IAA1B;gBAEAjB,cAAc,CAACC,KAAD,EAAQC,QAAR,CAAdF;gBACA;cACD;;YACD;cACEmB,OAAO,CAACC,KAARD,CAAczB,qBAAdyB;UAhBJ;QADF,OAmBO;UACL;UACA,OAAOb,OAAO,CAACU,IAAD,CAAPV,CAAc,GAAGW,IAAjBX,CAAP;QACD;MAvBH;;MAyBA,OAAOS,GAAP;IA1BC,GA2BA,EA3BAnB;EAzBqD,CAA1D;EAuDA,OAAOW,GAAP;AACD","names":["CommonActions","NOT_INITIALIZED_ERROR","createNavigationContainerRef","methods","Object","keys","listeners","removeListener","event","callback","_listeners$event","filter","cb","current","ref","value","entries","forEach","callbacks","addListener","isReady","reduce","acc","name","args","push","console","error"],"sources":["/Users/harsh_ju/node_modules/@react-navigation/core/lib/module/createNavigationContainerRef.tsx"],"sourcesContent":["import { CommonActions } from '@react-navigation/routers';\n\nimport type {\n  NavigationContainerEventMap,\n  NavigationContainerRef,\n  NavigationContainerRefWithCurrent,\n} from './types';\n\nexport const NOT_INITIALIZED_ERROR =\n  \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\n\nexport default function createNavigationContainerRef<\n  ParamList extends {} = ReactNavigation.RootParamList\n>(): NavigationContainerRefWithCurrent<ParamList> {\n  const methods = [\n    ...Object.keys(CommonActions),\n    'addListener',\n    'removeListener',\n    'resetRoot',\n    'dispatch',\n    'isFocused',\n    'canGoBack',\n    'getRootState',\n    'getState',\n    'getParent',\n    'getCurrentRoute',\n    'getCurrentOptions',\n  ] as const;\n\n  const listeners: Record<string, ((...args: any[]) => void)[]> = {};\n\n  const removeListener = (\n    event: string,\n    callback: (...args: any[]) => void\n  ) => {\n    listeners[event] = listeners[event]?.filter((cb) => cb !== callback);\n  };\n\n  let current: NavigationContainerRef<ParamList> | null = null;\n\n  const ref: NavigationContainerRefWithCurrent<ParamList> = {\n    get current() {\n      return current;\n    },\n    set current(value: NavigationContainerRef<ParamList> | null) {\n      current = value;\n\n      if (value != null) {\n        Object.entries(listeners).forEach(([event, callbacks]) => {\n          callbacks.forEach((callback) => {\n            value.addListener(\n              event as keyof NavigationContainerEventMap,\n              callback\n            );\n          });\n        });\n      }\n    },\n    isReady: () => {\n      if (current == null) {\n        return false;\n      }\n\n      return current.isReady();\n    },\n    ...methods.reduce<any>((acc, name) => {\n      acc[name] = (...args: any[]) => {\n        if (current == null) {\n          switch (name) {\n            case 'addListener': {\n              const [event, callback] = args;\n\n              listeners[event] = listeners[event] || [];\n              listeners[event].push(callback);\n\n              return () => removeListener(event, callback);\n            }\n            case 'removeListener': {\n              const [event, callback] = args;\n\n              removeListener(event, callback);\n              break;\n            }\n            default:\n              console.error(NOT_INITIALIZED_ERROR);\n          }\n        } else {\n          // @ts-expect-error: this is ok\n          return current[name](...args);\n        }\n      };\n      return acc;\n    }, {}),\n  };\n\n  return ref;\n}\n"]},"metadata":{},"sourceType":"module"}